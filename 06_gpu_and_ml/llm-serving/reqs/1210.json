{
  "temperature": 0,
  "prompt": "## Task\nBelow is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nYou are a code completion assistant and your task is to analyze user edits and then rewrite an excerpt that the user provides, suggesting the appropriate edits within the excerpt, taking into account the cursor location.\n\n### Events:\nUser edited \"\":\n```diff\n@@ -28,10 +28,10 @@\n     \"mode\": \"system\",\n     \"light\": \"One Light\",\n     \"dark\": \"One Light\"\n+  },\n+  \"languages\": {\n+    \"Plain Text\": {\n+      \"wrap_guides\": [10]\n+    }\n   }\n-\"languages\": {\n-  \"Plain Text\": {\n-    \"wrap_guides\": [10]\n-  }\n-}\n }\n\n```\n\nUser edited \"crates/zed/src/zed.rs\":\n```diff\n@@ -20,7 +20,7 @@\n use editor::ProposedChangesEditorToolbar;\n use editor::{scroll::Autoscroll, Editor, MultiBuffer};\n use feature_flags::FeatureFlagAppExt;\n-use futures::FutureExt;\n+use futures::AsyncBufReadFutureExt;\n use futures::{channel::mpsc, select_biased, StreamExt};\n use gpui::{\n     actions, point, px, Action, App, AppContext as _, AsyncApp, Context, DismissEvent, Element,\n\n```\n\nUser edited \"crates/zed/src/zed.rs\":\n```diff\n@@ -20,7 +20,7 @@\n use editor::ProposedChangesEditorToolbar;\n use editor::{scroll::Autoscroll, Editor, MultiBuffer};\n use feature_flags::FeatureFlagAppExt;\n-use futures::AsyncBufReadFutureExt;\n+use futures::FutureExt;\n use futures::{channel::mpsc, select_biased, StreamExt};\n use gpui::{\n     actions, point, px, Action, App, AppContext as _, AsyncApp, Context, DismissEvent, Element,\n\n```\n\n\n\nUser edited \"crates/zed/src/zed.rs\":\n```diff\n@@ -20,7 +20,7 @@\n use editor::ProposedChangesEditorToolbar;\n use editor::{scroll::Autoscroll, Editor, MultiBuffer};\n use feature_flags::FeatureFlagAppExt;\n-use futures::FutureExt;\n+use futures::Futurext;\n use futures::{channel::mpsc, select_biased, StreamExt};\n use gpui::{\n     actions, point, px, Action, App, AppContext as _, AsyncApp, Context, DismissEvent, Element,\n\n```\n\nUser edited \"crates/zed/src/zed.rs\":\n```diff\n@@ -20,7 +20,7 @@\n use editor::ProposedChangesEditorToolbar;\n use editor::{scroll::Autoscroll, Editor, MultiBuffer};\n use feature_flags::FeatureFlagAppExt;\n-use futures::Futurext;\n+use futures::FutureExt;\n use futures::{channel::mpsc, select_biased, StreamExt};\n use gpui::{\n     actions, point, px, Action, App, AppContext as _, AsyncApp, Context, DismissEvent, Element,\n\n```\n\n\n\nUser edited \"untitled\":\n```diff\n@@ -1 +1 @@\n-h\n\\ No newline at end of file\n+hello.\n\\ No newline at end of file\n\n```\n\nUser edited \"crates/zed/src/zed.rs\":\n```diff\n@@ -7,7 +7,7 @@\n mod open_listener;\n mod quick_action_bar;\n #[cfg(target_os = \"windows\")]\n-pub(crate) mod windows_only_instance;\n+pub(crate) mod windon ws_only_instance;\n \n use anyhow::Context as _;\n pub use app_menus::*;\n@@ -20,7 +20,7 @@\n use editor::ProposedChangesEditorToolbar;\n use editor::{scroll::Autoscroll, Editor, MultiBuffer};\n use feature_flags::FeatureFlagAppExt;\n-use futures::FutureExt;\n+use futures::FutureE xt;\n use futures::{channel::mpsc, select_biased, StreamExt};\n use gpui::{\n     actions, point, px, Action, App, AppContext as _, AsyncApp, Context, DismissEvent, Element,\n@@ -38,8 +38,8 @@\n use release_channel::{AppCommitSha, ReleaseChannel};\n use rope::Rope;\n use search::project_search::ProjectSearchBar;\n-use settings::{\n-    initial_project_settings_content, initial_tasks_content, update_settings_file,\n+use settings::{ \n+    initial_projec t_settings_content, initial_tasks_content, update_settings_file,\n     InvalidSettingsError, KeymapFile, KeymapFileLoadResult, Settings, SettingsStore,\n     DEFAULT_KEYMAP_PATH, VIM_KEYMAP_PATH,\n };\n\n```\n\n### Input:\n```crates/zed/src/zed.rs\n#[cfg(target_os = \"windows\")]\n<|editable_region_start|>\npub(crate) mod windon ws_only_instance;\n\nuse anyhow::Context as _;\npub use app_menus::*;\nuse assets::Assets;\nuse assistant_context_editor::AssistantPanelDelegate;\nuse breadcrumbs::Breadcrumbs;\nuse client::{zed_urls, ZED_URL_SCHEME};\nuse collections::VecDeque;\nuse command_palette_hooks::CommandPaletteFilter;\nuse editor::ProposedChangesEditorToolbar;\nuse editor::{scroll::Autoscroll, Editor, MultiBuffer};\nuse feature_flags::FeatureFlagAppExt;\nuse futures::FutureE xt;\nuse futures::{channel::mpsc, select_biased, StreamExt};\nuse gpui::{\n    actions, point, px, Action, App, AppContext as _, AsyncApp, Context, DismissEvent, Element,\n    Entity, Focusable, KeyBinding, MenuItem, ParentElement, PathPromptOptions, PromptLevel,\n    ReadGlobal, SharedString, Styled, Task, TitlebarOptions, Window, WindowKind, WindowOptions,\n};\npub use open_listener::*;\nuse outline_panel::OutlinePanel;\nuse paths::{local_settings_file_relative_path, local_tasks_file_relative_path};\nuse project::{DirectoryLister, ProjectItem};\nuse project_panel::ProjectPanel;\nuse prompt_library::PromptBuilder;\nuse quick_action_bar::QuickActionBar;\nuse recent_projects::open_ssh_project;\nuse release_channel::{AppCommitSha, ReleaseChannel};\nuse rope::Rope;\nuse search::project_search::ProjectSearchBar;\nuse settings::{ \n    initial_projec <|user_cursor_is_here|>t_settings_content, initial_tasks_content, update_settings_file,\n    InvalidSettingsError, KeymapFile, KeymapFileLoadResult, Settings, SettingsStore,\n    DEFAULT_KEYMAP_PATH, VIM_KEYMAP_PATH,\n};\nuse std::any::TypeId;\nuse std::path::PathBuf;\nuse std::{borrow::Cow, ops::Deref, path::Path, sync::Arc};\nuse terminal_view::terminal_panel::{self, TerminalPanel};\nuse theme::{ActiveTheme, ThemeSettings};\nuse ui::PopoverMenuHandle;\nuse util::markdown::MarkdownString;\nuse util::{asset_str, ResultExt};\nuse uuid::Uuid;\nuse vim_mode_setting::VimModeSetting;\nuse welcome::{BaseKeymap, MultibufferHint};\nuse workspace::notifications::{dismiss_app_notification, show_app_notification, NotificationId};\nuse workspace::CloseIntent;\nuse workspace::{\n    create_and_open_local_file, notifications::simple_message_notification::MessageNotification,\n    open_new, AppState, NewFile, NewWindow, OpenLog, Toast, Workspace, WorkspaceSettings,\n};\nuse workspace::{notifications::DetachAndPromptErr, Pane};\nuse zed_actions::{\n    OpenAccountSettings, OpenBrowser, OpenServerSettings, OpenSettings, OpenZedUrl, Quit,\n};\n\nactions!(\n    zed,\n    [\n        DebugElements,\n        Hide,\n        HideOthers,\n        Minimize,\n<|editable_region_end|>\n        OpenDefaultSettings,\n```\n\n### Response\n\n",
  "rewrite_speculation": true,
  "prediction": {
    "content": "```crates/zed/src/zed.rs\n#[cfg(target_os = \"windows\")]\n<|editable_region_start|>\npub(crate) mod windon ws_only_instance;\n\nuse anyhow::Context as _;\npub use app_menus::*;\nuse assets::Assets;\nuse assistant_context_editor::AssistantPanelDelegate;\nuse breadcrumbs::Breadcrumbs;\nuse client::{zed_urls, ZED_URL_SCHEME};\nuse collections::VecDeque;\nuse command_palette_hooks::CommandPaletteFilter;\nuse editor::ProposedChangesEditorToolbar;\nuse editor::{scroll::Autoscroll, Editor, MultiBuffer};\nuse feature_flags::FeatureFlagAppExt;\nuse futures::FutureE xt;\nuse futures::{channel::mpsc, select_biased, StreamExt};\nuse gpui::{\n    actions, point, px, Action, App, AppContext as _, AsyncApp, Context, DismissEvent, Element,\n    Entity, Focusable, KeyBinding, MenuItem, ParentElement, PathPromptOptions, PromptLevel,\n    ReadGlobal, SharedString, Styled, Task, TitlebarOptions, Window, WindowKind, WindowOptions,\n};\npub use open_listener::*;\nuse outline_panel::OutlinePanel;\nuse paths::{local_settings_file_relative_path, local_tasks_file_relative_path};\nuse project::{DirectoryLister, ProjectItem};\nuse project_panel::ProjectPanel;\nuse prompt_library::PromptBuilder;\nuse quick_action_bar::QuickActionBar;\nuse recent_projects::open_ssh_project;\nuse release_channel::{AppCommitSha, ReleaseChannel};\nuse rope::Rope;\nuse search::project_search::ProjectSearchBar;\nuse settings::{ \n    initial_projec <|user_cursor_is_here|>t_settings_content, initial_tasks_content, update_settings_file,\n    InvalidSettingsError, KeymapFile, KeymapFileLoadResult, Settings, SettingsStore,\n    DEFAULT_KEYMAP_PATH, VIM_KEYMAP_PATH,\n};\nuse std::any::TypeId;\nuse std::path::PathBuf;\nuse std::{borrow::Cow, ops::Deref, path::Path, sync::Arc};\nuse terminal_view::terminal_panel::{self, TerminalPanel};\nuse theme::{ActiveTheme, ThemeSettings};\nuse ui::PopoverMenuHandle;\nuse util::markdown::MarkdownString;\nuse util::{asset_str, ResultExt};\nuse uuid::Uuid;\nuse vim_mode_setting::VimModeSetting;\nuse welcome::{BaseKeymap, MultibufferHint};\nuse workspace::notifications::{dismiss_app_notification, show_app_notification, NotificationId};\nuse workspace::CloseIntent;\nuse workspace::{\n    create_and_open_local_file, notifications::simple_message_notification::MessageNotification,\n    open_new, AppState, NewFile, NewWindow, OpenLog, Toast, Workspace, WorkspaceSettings,\n};\nuse workspace::{notifications::DetachAndPromptErr, Pane};\nuse zed_actions::{\n    OpenAccountSettings, OpenBrowser, OpenServerSettings, OpenSettings, OpenZedUrl, Quit,\n};\n\nactions!(\n    zed,\n    [\n        DebugElements,\n        Hide,\n        HideOthers,\n        Minimize,\n<|editable_region_end|>\n        OpenDefaultSettings,\n```"
  },
  "max_tokens": 1024
}