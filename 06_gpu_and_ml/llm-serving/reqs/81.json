{
  "temperature": 0,
  "prompt": "## Task\nBelow is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nYou are a code completion assistant and your task is to analyze user edits and then rewrite an excerpt that the user provides, suggesting the appropriate edits within the excerpt, taking into account the cursor location.\n\n### Events:\nUser edited \"crates/language/src/language.rs\":\n```diff\n@@ -1790,7 +1790,6 @@\n             .and_then(|label_details| label_details.description.as_ref())\n         {\n             format!(\"{label} {description}\")\n-        // TODO kb use detail first?\n         } else if let Some(detail) = &item.detail {\n             format!(\"{label} {detail}\")\n         } else {\n\n```\n\nUser edited \"crates/language/src/language.rs\":\n```diff\n@@ -1784,13 +1784,7 @@\n         let runs = highlight_id\n             .map(|highlight_id| vec![(0..label_length, highlight_id)])\n             .unwrap_or_default();\n-        let text = if let Some(description) = item\n-            .label_details\n-            .as_ref()\n-            .and_then(|label_details| label_details.description.as_ref())\n-        {\n-            format!(\"{label} {description}\")\n-        } else if let Some(detail) = &item.detail {\n+        let text =  else if let Some(detail) = &item.detail {\n             format!(\"{label} {detail}\")\n         } else {\n             label.clone()\n\n```\n\nUser edited \"crates/language/src/language.rs\":\n```diff\n@@ -1784,7 +1784,7 @@\n         let runs = highlight_id\n             .map(|highlight_id| vec![(0..label_length, highlight_id)])\n             .unwrap_or_default();\n-        let text =  else if let Some(detail) = &item.detail {\n+        let text = if let Some(detail) = &item.detail {\n             format!(\"{label} {detail}\")\n         } else {\n             label.clone()\n\n```\n\nUser edited \"crates/language/src/language.rs\":\n```diff\n@@ -1787,6 +1787,7 @@\n         let text = if let Some(detail) = &item.detail {\n             format!(\"{label} {detail}\")\n         } else {\n+        } else {\n             label.clone()\n         };\n         Self {\n\n```\n\nUser edited \"crates/language/src/language.rs\":\n```diff\n@@ -1786,7 +1786,12 @@\n             .unwrap_or_default();\n         let text = if let Some(detail) = &item.detail {\n             format!(\"{label} {detail}\")\n-        } else {\n+        } else if let Some(description) = item\n+            .label_details\n+            .as_ref()\n+            .and_then(|label_details| label_details.description.as_ref())\n+        {\n+            format!(\"{label} {description}\")\n         } else {\n             label.clone()\n         };\n\n```\n\nUser edited \"crates/language/src/language.rs\":\n```diff\n@@ -1784,7 +1784,7 @@\n         let runs = highlight_id\n             .map(|highlight_id| vec![(0..label_length, highlight_id)])\n             .unwrap_or_default();\n-        let text = if let Some(detail) = &item.detail {\n+        let text = if let Some(detail) = dbg!(&item.detail {\n             format!(\"{label} {detail}\")\n         } else if let Some(description) = item\n             .label_details\n\n```\n\nUser edited \"crates/language/src/language.rs\":\n```diff\n@@ -1784,7 +1784,7 @@\n         let runs = highlight_id\n             .map(|highlight_id| vec![(0..label_length, highlight_id)])\n             .unwrap_or_default();\n-        let text = if let Some(detail) = dbg!(&item.detail {\n+        let text = if let Some(detail) = dbg!(&item.detail) {\n             format!(\"{label} {detail}\")\n         } else if let Some(description) = item\n             .label_details\n\n```\n\nUser edited \"crates/language/src/language.rs\":\n```diff\n@@ -1791,6 +1791,7 @@\n             .as_ref()\n             .and_then(|label_details| label_details.description.as_ref())\n         {\n+            dbg!(descri)\n             format!(\"{label} {description}\")\n         } else {\n             label.clone()\n\n```\n\nUser edited \"crates/language/src/language.rs\":\n```diff\n@@ -1791,7 +1791,7 @@\n             .as_ref()\n             .and_then(|label_details| label_details.description.as_ref())\n         {\n-            dbg!(descri)\n+            dbg!(description);\n             format!(\"{label} {description}\")\n         } else {\n             label.clone()\n\n```\n\nUser edited \"src/terminal/size.zig\":\n```diff\n@@ -19,6 +19,7 @@\n ///\n /// This is a packed struct so we can attach methods to an int.\n pub fn Offset(comptime T: type) type {\n+    std.\n     return packed struct(OffsetInt) {\n         const Self = @This();\n \n\n```\n\nUser edited \".git/COMMIT_EDITMSG\":\n```diff\n@@ -1,4 +1,4 @@\n-\n+Fall back \n # Please enter the commit message for your changes. Lines starting\n # with '#' will be ignored, and an empty message aborts the commit.\n #\n\n```\n\nUser edited \".git/COMMIT_EDITMSG\":\n```diff\n@@ -1,4 +1,5 @@\n Fall back \n+\n # Please enter the commit message for your changes. Lines starting\n # with '#' will be ignored, and an empty message aborts the commit.\n #\n\n```\n\nUser edited \".git/COMMIT_EDITMSG\":\n```diff\n@@ -1,4 +1,4 @@\n-Fall back \n+Fall back to completions,\n \n # Please enter the commit message for your changes. Lines starting\n # with '#' will be ignored, and an empty message aborts the commit.\n\n```\n\n### Input:\n```.git/COMMIT_EDITMSG\n<|editable_region_start|>\nFall back to completions,<|user_cursor_is_here|>\n\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n#\n# On branch kb/better-completions-fallback\n# Changes to be committed:\n#\tmodified:   crates/language/src/language.rs\n#\tmodified:   crates/project/src/lsp_store.rs\n#\n\n<|editable_region_end|>\n```\n\n### Response\n\n",
  "rewrite_speculation": true,
  "prediction": {
    "content": "```.git/COMMIT_EDITMSG\n<|editable_region_start|>\nFall back to completions,<|user_cursor_is_here|>\n\n# Please enter the commit message for your changes. Lines starting\n# with '#' will be ignored, and an empty message aborts the commit.\n#\n# On branch kb/better-completions-fallback\n# Changes to be committed:\n#\tmodified:   crates/language/src/language.rs\n#\tmodified:   crates/project/src/lsp_store.rs\n#\n\n<|editable_region_end|>\n```"
  },
  "max_tokens": 1024
}