{
  "temperature": 0,
  "prompt": "## Task\nBelow is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nYou are a code completion assistant and your task is to analyze user edits and then rewrite an excerpt that the user provides, suggesting the appropriate edits within the excerpt, taking into account the cursor location.\n\n### Events:\nUser edited \"untitled\":\n```diff\n@@ -83,7 +83,7 @@\n - [ ] Linux-wayland (64)              https://github.com/zed-industries/zed/issues?q=is%3Aopen%20label%3Alinux-wayland%20no%3Atype%20%20\n - [ ] Linux not:x11,wayland (159)     https://github.com/zed-industries/zed/issues?q=is%3Aopen%20-label%3Alinux-wayland%20-label%3Alinux-x11%20label%3Alinux%20no%3Atype%20%20%20\n - [ ] AI (168)                        https://github.com/zed-industries/zed/issues?q=is%3Aissue%20state%3Aopen%20label%3Aai%20no%3Atype\n-- [ ] [joseph] Panics: https://github.com/zed-industries/zed/issues?q=is%3Aissue%20state%3Aopen%20label%3A%22panic%20%2F%20crash%22 (65 -> )\n+- [[joseph] Panics: https://github.com/zed-industries/zed/issues?q=is%3Aissue%20state%3Aopen%20label%3A%22panic%20%2F%20crash%22 (65 -> )\n - [ ] [joseph] https://github.com/zed-industries/zed/issues?q=state%3Aopen%20label%3A%22awaiting%20info%22\n - \n \n\n```\n\nUser edited \"untitled\":\n```diff\n@@ -83,8 +83,8 @@\n - [ ] Linux-wayland (64)              https://github.com/zed-industries/zed/issues?q=is%3Aopen%20label%3Alinux-wayland%20no%3Atype%20%20\n - [ ] Linux not:x11,wayland (159)     https://github.com/zed-industries/zed/issues?q=is%3Aopen%20-label%3Alinux-wayland%20-label%3Alinux-x11%20label%3Alinux%20no%3Atype%20%20%20\n - [ ] AI (168)                        https://github.com/zed-industries/zed/issues?q=is%3Aissue%20state%3Aopen%20label%3Aai%20no%3Atype\n-- [[joseph] Panics: https://github.com/zed-industries/zed/issues?q=is%3Aissue%20state%3Aopen%20label%3A%22panic%20%2F%20crash%22 (65 -> )\n-- [ ] [joseph] https://github.com/zed-industries/zed/issues?q=state%3Aopen%20label%3A%22awaiting%20info%22\n+- [joseph] Panics: https://github.com/zed-industries/zed/issues?q=is%3Aissue%20state%3Aopen%20label%3A%22panic%20%2F%20crash%22 (65 -> )\n+- [joseph] https://github.com/zed-industries/zed/issues?q=state%3Aopen%20label%3A%22awaiting%20info%22\n - \n \n ### \n\n```\n\nUser edited \"untitled\":\n```diff\n@@ -84,7 +84,7 @@\n - [ ] Linux not:x11,wayland (159)     https://github.com/zed-industries/zed/issues?q=is%3Aopen%20-label%3Alinux-wayland%20-label%3Alinux-x11%20label%3Alinux%20no%3Atype%20%20%20\n - [ ] AI (168)                        https://github.com/zed-industries/zed/issues?q=is%3Aissue%20state%3Aopen%20label%3Aai%20no%3Atype\n - [joseph] Panics: https://github.com/zed-industries/zed/issues?q=is%3Aissue%20state%3Aopen%20label%3A%22panic%20%2F%20crash%22 (65 -> )\n-- [joseph] https://github.com/zed-industries/zed/issues?q=state%3Aopen%20label%3A%22awaiting%20info%22\n+- [joseph] awaiting-info issues: https://github.com/zed-industries/zed/issues?q=state%3Aopen%20label%3A%22awaiting%20info%22\n - \n \n ### \n\n```\n\nUser edited \"untitled\":\n```diff\n@@ -84,7 +84,7 @@\n - [ ] Linux not:x11,wayland (159)     https://github.com/zed-industries/zed/issues?q=is%3Aopen%20-label%3Alinux-wayland%20-label%3Alinux-x11%20label%3Alinux%20no%3Atype%20%20%20\n - [ ] AI (168)                        https://github.com/zed-industries/zed/issues?q=is%3Aissue%20state%3Aopen%20label%3Aai%20no%3Atype\n - [joseph] Panics: https://github.com/zed-industries/zed/issues?q=is%3Aissue%20state%3Aopen%20label%3A%22panic%20%2F%20crash%22 (65 -> )\n-- [joseph] awaiting-info issues: https://github.com/zed-industries/zed/issues?q=state%3Aopen%20label%3A%22awaiting%20info%22\n+- [joseph] awaiting-info issues: https://github.com/zed-industries/zed/issues?q=state%3Aopen%20label%3A%22awaiting%20info%22 \n - \n \n ### \n\n```\n\n### Input:\n```untitled\n    FakeGitRepository, that we can make changes to files, stage/unstage/commit\n<|editable_region_start|>\n    them using our new actions, and the resulting state of the (fake) filesystem/git repo is what we expect\n  - Also test that git operations are sequenced correctly.\n  - Then we should extend this to remote editing when that is supported.\n    \n- [*] [@kirill] SSH remoting/collab support\n  - [x] Show the list of modified files in the panel\n  - [x] Staging/unstaging\n  - [x] Committing\n  - [ ] Shared editing of the commit message buffer\n  - [x] Read-only collaborator support\n    - If read only buttons should look disabled for example\n    - add something like `GitPanel::is_read_only`\n    \n- [@conrad] Project diff view\n  - [ ] Fix crash when including deleted files\n  - [ ] Show untracked files?\n  - [ ] Handle empty state\n  \n  - [ ] Change all multibuffer headers to look like git ui figma multibuffer headers\n    - [@nate] check this design\n  - [ ] [@nate] Move stage controls to the hunk controls instead of the header controls\n  - [ ] [@nate] Remove the checkbox column in the design\n  - [ ] Make hunk controls sticky\n  - [ ] \n  - [ ] Should show staged-but-untracked files\n  - [ ] Should show unstaged, untracked files?\n  - [ ] Open when interacting with files in the sidebar\n  - [ ] \n\n  \n## To Test\n  - Single file worktrees & External libs\n  - Submodules\n  - Nested Repositories\n  - Compare the info git provides in the commit message template with what the panel shows\n  - Conflicts\n    - Suggest commit message like git does?\n    - Filter out conflicted files?\n    - Jump to conflict markers?\n    - Etc.\n  \n## Stretch\n-<|user_cursor_is_here|>\n- [ ] Add \"debug: copy git state\" command\n    - Use to debug user issues as they start testing git_ui\n  - [ ] Smoother handling of open buffers whose backing file changes when switching branches\n    -  Files present in one branch but not the other\n  - [POSTPONED] [] Add the diff line numbers to the status information\n  - [ ] vim mode in commit editor\n  - [*] [@nate] Land setting UI with git panel settings included\n    - May or may not be ready for Feb 19, depends on a few factors \n  - [ ] Allow pushing and pulling (when staging state is clean/no unstaged changes or conflicts)\n    - [ ] Notify on conflict/can't push or pull\n  - [ ] Track when at top or bottom of list (scroll-position wise), add gradient overlay\n\n## Later / Idea dump   \n\n- [ ] Add \"CommitAllModified\" (don't commit untracked files)\n- [ ] Overflow menu for git top level actions (`...` menu)\n- [ ] Context menu for selected entry\n- [ ] Overflow menu for selected entry\n- [ ] Restore the on-click behavior for specific status lines\n- [ ] Add a revert all command / button\n  - undoable\n    - when reverting all, do: add all to index, create an orphan commit, and\n      then return to the original branch/SHA, and remember the SHA of the orphan\n      commit we created so we can restore it with an action \n    - policy: Zed will not erase these orphan commits but git can gc them whenever it wants, so don't use it for long-term storage\n    - don't serialize these commit SHAs, even if Zed doesn't remember them, in an emergency, user can do `git reflog` and find that commit and check it out manually\n  - discard all changes to tracked files\n  - for untracked files what should we do? leave them alone or delete them?\n    - vscode will delete them\n    - `git reset --hard` will not delete them\n    - `git clean` removes untracked files (\"discard all\" = `git reset --hard && git clean -fd`?)\n- [ ] stashing?\n  - stash all action => straightforward\n  - popping---might have a bunch of things in the stack; might have merge conflicts when popping\n- [ ] Show a striped background for non-staged hunks, and a solid background for staged ones\n- [ ] Make sure there's a 'suggest a commit message' button somewhere if AI is enabled\n- [ ] Create the unified diff view UI\n- [ ] \"Merge conflicts\" view\n    \n## Done\n- [x] [@cole] Add default linux and vim bindings\n- [x] Clicking on \"1 change\" text should toggle checkbox\n- [x] [@nate] Add git theme keys to theme\n<|editable_region_end|>\n- [x] Clicking on \"1 change\" text should toggle checkbox\n```\n\n### Response\n\n",
  "rewrite_speculation": true,
  "prediction": {
    "content": "```untitled\n    FakeGitRepository, that we can make changes to files, stage/unstage/commit\n<|editable_region_start|>\n    them using our new actions, and the resulting state of the (fake) filesystem/git repo is what we expect\n  - Also test that git operations are sequenced correctly.\n  - Then we should extend this to remote editing when that is supported.\n    \n- [*] [@kirill] SSH remoting/collab support\n  - [x] Show the list of modified files in the panel\n  - [x] Staging/unstaging\n  - [x] Committing\n  - [ ] Shared editing of the commit message buffer\n  - [x] Read-only collaborator support\n    - If read only buttons should look disabled for example\n    - add something like `GitPanel::is_read_only`\n    \n- [@conrad] Project diff view\n  - [ ] Fix crash when including deleted files\n  - [ ] Show untracked files?\n  - [ ] Handle empty state\n  \n  - [ ] Change all multibuffer headers to look like git ui figma multibuffer headers\n    - [@nate] check this design\n  - [ ] [@nate] Move stage controls to the hunk controls instead of the header controls\n  - [ ] [@nate] Remove the checkbox column in the design\n  - [ ] Make hunk controls sticky\n  - [ ] \n  - [ ] Should show staged-but-untracked files\n  - [ ] Should show unstaged, untracked files?\n  - [ ] Open when interacting with files in the sidebar\n  - [ ] \n\n  \n## To Test\n  - Single file worktrees & External libs\n  - Submodules\n  - Nested Repositories\n  - Compare the info git provides in the commit message template with what the panel shows\n  - Conflicts\n    - Suggest commit message like git does?\n    - Filter out conflicted files?\n    - Jump to conflict markers?\n    - Etc.\n  \n## Stretch\n-<|user_cursor_is_here|>\n- [ ] Add \"debug: copy git state\" command\n    - Use to debug user issues as they start testing git_ui\n  - [ ] Smoother handling of open buffers whose backing file changes when switching branches\n    -  Files present in one branch but not the other\n  - [POSTPONED] [] Add the diff line numbers to the status information\n  - [ ] vim mode in commit editor\n  - [*] [@nate] Land setting UI with git panel settings included\n    - May or may not be ready for Feb 19, depends on a few factors \n  - [ ] Allow pushing and pulling (when staging state is clean/no unstaged changes or conflicts)\n    - [ ] Notify on conflict/can't push or pull\n  - [ ] Track when at top or bottom of list (scroll-position wise), add gradient overlay\n\n## Later / Idea dump   \n\n- [ ] Add \"CommitAllModified\" (don't commit untracked files)\n- [ ] Overflow menu for git top level actions (`...` menu)\n- [ ] Context menu for selected entry\n- [ ] Overflow menu for selected entry\n- [ ] Restore the on-click behavior for specific status lines\n- [ ] Add a revert all command / button\n  - undoable\n    - when reverting all, do: add all to index, create an orphan commit, and\n      then return to the original branch/SHA, and remember the SHA of the orphan\n      commit we created so we can restore it with an action \n    - policy: Zed will not erase these orphan commits but git can gc them whenever it wants, so don't use it for long-term storage\n    - don't serialize these commit SHAs, even if Zed doesn't remember them, in an emergency, user can do `git reflog` and find that commit and check it out manually\n  - discard all changes to tracked files\n  - for untracked files what should we do? leave them alone or delete them?\n    - vscode will delete them\n    - `git reset --hard` will not delete them\n    - `git clean` removes untracked files (\"discard all\" = `git reset --hard && git clean -fd`?)\n- [ ] stashing?\n  - stash all action => straightforward\n  - popping---might have a bunch of things in the stack; might have merge conflicts when popping\n- [ ] Show a striped background for non-staged hunks, and a solid background for staged ones\n- [ ] Make sure there's a 'suggest a commit message' button somewhere if AI is enabled\n- [ ] Create the unified diff view UI\n- [ ] \"Merge conflicts\" view\n    \n## Done\n- [x] [@cole] Add default linux and vim bindings\n- [x] Clicking on \"1 change\" text should toggle checkbox\n- [x] [@nate] Add git theme keys to theme\n<|editable_region_end|>\n- [x] Clicking on \"1 change\" text should toggle checkbox\n```"
  },
  "max_tokens": 1024
}