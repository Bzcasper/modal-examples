{
  "temperature": 0,
  "prompt": "## Task\nBelow is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\n\n### Instruction:\nYou are a code completion assistant and your task is to analyze user edits and then rewrite an excerpt that the user provides, suggesting the appropriate edits within the excerpt, taking into account the cursor location.\n\n### Events:\nUser edited \"assets/keymaps/default-macos.json\":\n```diff\n@@ -505,7 +505,7 @@\n       \"cmd-shift-e\": \"project_panel::ToggleFocus\",\n       \"cmd-shift-b\": \"outline_panel::ToggleFocus\",\n       \"ctrl-shift-g\": \"git_panel::ToggleFocus\",\n-      \"cmd-?\": \"assistant::ToggleFocus\",\n+      \"cmd-i\": \"assistant::ToggleFocus\",\n       \"cmd-alt-s\": \"workspace::SaveAll\",\n       \"cmd-k m\": \"language_selector::Toggle\",\n       \"escape\": \"workspace::Unfollow\",\n\n```\n\nUser edited \"\":\n```diff\n@@ -35,6 +35,10 @@\n       ]\n     }\n   ],\n+  \"project_panel\": {\n+      \"folder_icons\": false\n+    },\n+\n   \"inline_completions\": {\n     \"disabled_globs\": [\".env\"]\n   },\n\n```\n\nUser edited \"\":\n```diff\n@@ -36,8 +36,8 @@\n     }\n   ],\n   \"project_panel\": {\n-      \"folder_icons\": false\n-    },\n+    \"folder_icons\": false\n+  },\n \n   \"inline_completions\": {\n     \"disabled_globs\": [\".env\"]\n\n```\n\nUser edited \"\":\n```diff\n@@ -3,7 +3,8 @@\n     \"context\": \"Workspace\",\n     \"bindings\": {\n       \"alt-\\\\\": null,\n-      \"ctrl-c\": \"menu::Cancel\"\n+      \"ctrl-c\": \"menu::Cancel\",\n+      \"alt-cmd-o\": [\"projects::OpenRecent\", {\"create_new_window\": true }], \n     }\n   },\n   {\n\n```\n\nUser edited \"\":\n```diff\n@@ -4,7 +4,7 @@\n     \"bindings\": {\n       \"alt-\\\\\": null,\n       \"ctrl-c\": \"menu::Cancel\",\n-      \"alt-cmd-o\": [\"projects::OpenRecent\", {\"create_new_window\": true }], \n+      \"alt-cmd-o\": [\"projects::OpenRecent\", { \"create_new_window\": true }]\n     }\n   },\n   {\n\n```\n\n\n\nUser edited \"crates/editor/src/editor.rs\":\n```diff\n@@ -2698,7 +2698,7 @@\n         let mut linked_edits = HashMap::<_, Vec<_>>::default();\n         let mut new_selections = Vec::with_capacity(selections.len());\n         let mut new_autoclose_regions = Vec::new();\n-        let snapshot = self.buffer.read(cx).read(cx);\n+        let snapshot = self.<buffer>.read(cx).read(cx);\n \n         for (selection, autoclose_region) in\n             self.selections_with_autoclose_regions(selections, &snapshot)\n\n```\n\nUser edited \"crates/editor/src/editor.rs\":\n```diff\n@@ -2698,7 +2698,7 @@\n         let mut linked_edits = HashMap::<_, Vec<_>>::default();\n         let mut new_selections = Vec::with_capacity(selections.len());\n         let mut new_autoclose_regions = Vec::new();\n-        let snapshot = self.<buffer>.read(cx).read(cx);\n+        let snapshot = self.buffer.read(cx).read(cx);\n \n         for (selection, autoclose_region) in\n             self.selections_with_autoclose_regions(selections, &snapshot)\n\n```\n\nUser edited \"script/danger/dangerfile.ts\":\n```diff\n@@ -9,7 +9,7 @@\n });\n \n const RELEASE_NOTES_PATTERN = /Release Notes:\\r?\\n\\s+-/gm;\n-const body = danger.github.pr.body;\n+const body = <danger>.github.pr.body;\n \n const hasReleaseNotes = RELEASE_NOTES_PATTERN.test(body);\n \n\n```\n\nUser edited \"script/danger/dangerfile.ts\":\n```diff\n@@ -9,7 +9,7 @@\n });\n \n const RELEASE_NOTES_PATTERN = /Release Notes:\\r?\\n\\s+-/gm;\n-const body = <danger>.github.pr.body;\n+const body = danger.github.pr.body;\n \n const hasReleaseNotes = RELEASE_NOTES_PATTERN.test(body);\n \n\n```\n\nUser edited \"testing\":\n```diff\n@@ -0,0 +1 @@\n+{\"foo\": \"bar\"}\n\\ No newline at end of file\n\n```\n\nUser edited \"testing\":\n```diff\n@@ -1 +1 @@\n-{\"foo\": \"bar\"}\n\\ No newline at end of file\n+{\"foo\": \"bar\", \"baz\": }\n\\ No newline at end of file\n\n```\n\n### Input:\n```testing\n<|editable_region_start|>\n{\"foo\": \"bar\", \"baz\": <|user_cursor_is_here|>}\n<|editable_region_end|>\n```\n\n### Response\n\n",
  "rewrite_speculation": true,
  "prediction": {
    "content": "```testing\n<|editable_region_start|>\n{\"foo\": \"bar\", \"baz\": <|user_cursor_is_here|>}\n<|editable_region_end|>\n```"
  },
  "max_tokens": 1024
}